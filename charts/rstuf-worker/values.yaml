# Default values for rstuf-worker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/repository-service-tuf/repository-service-tuf-worker
  pullPolicy: IfNotPresent
  tag: "v0.17.0b1"

livenessProbe:
  exec:
    # bash is needed to replace the environment variable
    command: [
      "bash",
      "-c",
      "celery inspect ping -A apps -d celery@$HOSTNAME"
    ]
  initialDelaySeconds: 30
  periodSeconds: 60
  timeoutSeconds: 10
readinessProbe:
  exec:
    command:
      [
        "/usr/local/bin/python",
        "-c",
        "\"import os;from celery.task.control import inspect;from app import app;exit(0 if os.environ['HOSTNAME'] in ','.join(inspect(app=app).stats().keys()) else 1)\""
      ]

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

storage:
    type: "AWSS3"    # AWSS3 or localStorage
    storagePath: ""  # required only when using `storageBackend` as "localStorage"
    onlineKeyDir: "" # optional when using `storageBackend` as "localStorage"
    s3Bucket: "tuf-metadata"
    s3KeyId: "s3-keyid"
    s3AccessKey: "s3-access-key"
    s3Region: ""
    s3Endpoint: ""


backend:
  brokerServer: "redis://redis"
  redisServer: "redis://redis"
  dbServer: "postgresql://postgres:password@postgres:5432"
  lockTimeOut: "" # default 60 seconds
  redisPort: ""  # default is 5672
  redisDbResult: "" # default is 0
  redisDbSettings: "" # default is 1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
